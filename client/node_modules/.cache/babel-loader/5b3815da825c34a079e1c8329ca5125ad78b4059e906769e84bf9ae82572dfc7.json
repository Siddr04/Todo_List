{"ast":null,"code":"var _jsxFileName = \"/home/siddhant/dev/todo_list/src/components/Tasks.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tasks = () => {\n  _s();\n  const [task, settask] = useState([{\n    id: 1,\n    text: 'Meet with client',\n    day: '12th Jan , 2:30 pm',\n    reminder: true\n  }, {\n    id: 2,\n    text: 'Kids annual function',\n    day: '15th Jan , 5:30 pm',\n    reminder: true\n  }, {\n    id: 3,\n    text: 'Dinner with Amanda',\n    day: '20th Jan , 7:30 pm',\n    reminder: true\n  }, {\n    id: 4,\n    text: 'Deploy code into production',\n    day: '22th Jan , 11:00 am',\n    reminder: false\n  }]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: task.text\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n_s(Tasks, \"VZBeAmjP4JOScl1j4EB85A+9j3E=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useState","Tasks","task","settask","id","text","day","reminder","tasks","map"],"sources":["/home/siddhant/dev/todo_list/src/components/Tasks.js"],"sourcesContent":["import React from 'react'\n\nimport { useState } from 'react'\n\nconst Tasks = () => {\n\n  const [task,settask]=useState([\n    {\n      id:1,\n      text:'Meet with client',\n      day:'12th Jan , 2:30 pm',\n      reminder:true\n    },\n    {\n      id:2,\n      text:'Kids annual function',\n      day:'15th Jan , 5:30 pm',\n      reminder:true\n    },\n    {\n      id:3,\n      text:'Dinner with Amanda',\n      day:'20th Jan , 7:30 pm',\n      reminder:true\n    },\n    {\n      id:4,\n      text:'Deploy code into production',\n      day:'22th Jan , 11:00 am',\n      reminder:false\n    },\n  \n  ])\n  return (\n    <>\n      {tasks.map((task)=>(\n        <h3 key={task.id}>{task.text}</h3>\n      ))}\n    </>\n  )\n}\n\nexport default Tasks"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,QAAQ,QAAQ,OAAO;AAAA;AAAA;AAEhC,MAAMC,KAAK,GAAG,MAAM;EAAA;EAElB,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAACH,QAAQ,CAAC,CAC5B;IACEI,EAAE,EAAC,CAAC;IACJC,IAAI,EAAC,kBAAkB;IACvBC,GAAG,EAAC,oBAAoB;IACxBC,QAAQ,EAAC;EACX,CAAC,EACD;IACEH,EAAE,EAAC,CAAC;IACJC,IAAI,EAAC,sBAAsB;IAC3BC,GAAG,EAAC,oBAAoB;IACxBC,QAAQ,EAAC;EACX,CAAC,EACD;IACEH,EAAE,EAAC,CAAC;IACJC,IAAI,EAAC,oBAAoB;IACzBC,GAAG,EAAC,oBAAoB;IACxBC,QAAQ,EAAC;EACX,CAAC,EACD;IACEH,EAAE,EAAC,CAAC;IACJC,IAAI,EAAC,6BAA6B;IAClCC,GAAG,EAAC,qBAAqB;IACzBC,QAAQ,EAAC;EACX,CAAC,CAEF,CAAC;EACF,oBACE;IAAA,UACGC,KAAK,CAACC,GAAG,CAAEP,IAAI,iBACd;MAAA,UAAmBA,IAAI,CAACG;IAAI,GAAnBH,IAAI,CAACE,EAAE;MAAA;MAAA;MAAA;IAAA,QACjB;EAAC,iBACD;AAEP,CAAC;AAAA,GApCKH,KAAK;AAAA,KAALA,KAAK;AAsCX,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}